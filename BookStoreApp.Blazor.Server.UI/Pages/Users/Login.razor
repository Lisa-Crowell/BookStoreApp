@page "/users/login"
@inject IAuthenticationService AuthenticationService
@inject NavigationManager navigationManager

<h3>Login</h3>

<div>
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="userName">User Name</label>
            <InputText class="form-control" @bind-Value="LoginModel.UserName" />
            <ValidationMessage For="@(() => LoginModel.UserName)" />
        </div>
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="LoginModel.Email" />
            <ValidationMessage For="@(() => LoginModel.Email)" />
        </div>
        <br/>
        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(() => LoginModel.Password)" />
        </div>
        <br/>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string _message = string.Empty;
    public async Task HandleLogin()
    {
        try
        {
            var response = await AuthenticationService.AuthenticateAsync(LoginModel);

            if (response)
            {
                navigationManager.NavigateTo("/");
            }
            _message = "Invalid credentials, please try again";
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode is >= 200 and <= 299)
            {
                // _message = "Login Successful";
            }
            
            _message = ex.Message;
        }
    }
}